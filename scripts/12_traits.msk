
module traits

trait Movable {
    func move(x int)
}

struct Elevator {
    height int
}

impl Elevator {
    trait Movable

    func move(x int) {
        height = x
        print("moved elevator")
    }
}

struct Car {
    x int
}

impl Car {
    trait Movable

    func move(nx int) {
        x = nx
        print("moved car")
    }
}

func moveSomethingMovable(thing Movable *, x int) {
    thing->move(x)
}

func main() {
    let elevator = Elevator{
       height = 0
    }

    let car = Car {
        x = 10
    }

    moveSomethingMovable((&elevator) as Movable, 10)
    moveSomethingMovable((&car) as Movable, 12)

    elevator.height
}
